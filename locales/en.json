{
  "index": {
    "role": "UI / UX Engineer",
    "name": "Takahiro Fujii",
    "activity": "Other activity, organization"
  },
  "header": {
    "about": "Me 🙋‍♂️",
    "works": "Works 👨‍💻",
    "blog": "Blog 📄",
    "articles": "Articles"
  },
  "name": "Takahiro Fujii",
  "about": {
    "techstack": "Teck Stack",
    "biography": "Biography",
    "awards": "Awards",
    "description-name": "Takahiro Fujii(Taka)",
    "description-title": "UI/UX Engineer / Engineering Manager / VPoE",
    "description-overview": "Takahiro Fujii(Taka) is working at WealthPark.inc as VPoE(Vice President of Engineering). Main responsibility is \"Execusion\" and \"Make technical roadmap / decision\". On the other hand that, as FrontEnd Engineer, also implementing product.",
    "description-main": "After graduated, Taka joined Rakuten and assigned Rakuten Travel Development. At international service development group, Taka developed hotel reservation system, extranet(provider system), accounting, inbound websystem as well. Working as Full-Stack engineer in while, but after 2017, Taka became Engineering Manager for UI/UX and FrontEnd fields. Then as Engineering Manager for UI Development Group (Web, iOS, Android), Taka contributed service, organization development. As freelance or in private, Taka is also doing product design, UI/UX design as well. Hobby is playing basketball and traveling. Favorites are coffee and alchol and Japanese food."
  },
  "blogs": {
    "title": "Articles",
    "10mins": "10mins",
    "20mins": "20mins",
    "8mins": "8mins",
    "5mins": "5mins",
    "titles": {
      "job-change": "I changed job.(Only Japanese)",
      "vision-driven": "My thinking through reading books regarding vision driven.(Only Japanese)",
      "one-month": "One month has passed, since I changed job.(Only Japanese)",
      "tutorial-document": "5tips when you make onboard document for internship(Software Engineer).(Only Japanese)",
      "vpoe": "First effort as VPoE"
    }
  },
  "presentations": {
    "title": "Major presentations and performance",
    "name": {
      "react-tokyo-plus": "react tokyo plus",
      "travel-frontend-react": "react meetup",
      "microservice-meetup": "Microservice Meetup Vol.6",
      "tus-class": "Tokyo University Of Science - Class",
      "tus-article": "Tokyo University Of Science - Article(Science Forum)",
      "travel-spring": "Spring Day 2016",
      "jsug-spring-rest-docs": "JSUG(Japan Spring User Group)"
    },
    "titles": {
      "react-tokyo-plus": "Large react product with 20+ FrontEnd Engineers in Rakuten Travel",
      "travel-frontend-react": "About Rakuten Travel FrontEnd",
      "microservice-meetup": "Microservices from Backend/FrontEnd point of view",
      "tus-class": "Career development at international/global environment",
      "tus-article": "Favorite thing is your work",
      "travel-spring": "About Rakuten Travel and Spring Framework(SlideShare)",
      "jsug-spring-rest-docs": "Spring Rest Docs(SlideShare)"
    }
  },
  "design": {
    "title": "Part of Design Works",
    "name": {
      "koikifm": "Logo",
      "nabnab": "Line Sticker",
      "tokyoflower": "Logo",
      "webhack": "Speaker Card",
      "winx": "Basketball Uniform",
      "business-card": "Business Card Design",
      "nabnab-old": "Line Sticker",
      "superpoints": "Basketball Uniform"
    },
    "titles": {
      "koikifm": "Koiki.fm Logo Design",
      "nabnab": "Line Sticker for Web Engineer",
      "tokyoflower": "Logo Design",
      "webhack": "Speaker Card Design",
      "winx": "Original Basketball Uniform for club team",
      "business-card": "Business Card Design",
      "nabnab-old": "Line Sticker",
      "superpoints": "Original Basketball Uniform for company"
    }
  },
  "react-tokyo-plus": {
    "1": " is react meetup in Tokyo. This is a presentation in this meetup.",
    "2": "I did presentation with colleagues at Mercari. As title, our theme is how to build large scale react application with big organization. And material and presentation language is English.",
    "3": "This presentation is constructed with 3 chapters.",
    "chapter1": "Chapter 1 - Fundermental Implementation and Framework",
    "chapter2": "Chapter 2 - Retrospective of project and remaining issue",
    "chapter3": "Chapter 3 - Current action",
    "4": "I was in charge of chapter 2.",
    "5": "At least in Japan, as of 2018, 2019, there are not so many company, projects with 20 over front-end enginners. That's why we think our case study might be valuable for other company members, and we chose this topic. I mainly talked UI components library development and how to change our organization based on development phase.",
    "6": "Also I talked similar topic in different meetup and it's by Japanese."
  },
  "travel-frontend-react": {
    "title": "About Rakuten Travel FrontEnd",
    "1": " is one of major react meetup in Tokyo. This is Lightning Talk in this meetup.",
    "2": "I did presentation at Sansan.inc. As title, I shared overview of Rakuten Travel FrontEnd in 2019.",
    "3": "Especially I shared Rakuten Travel FrontEnd situation after 2017. This is 1st time we shared about Rakuten Travel react.js usage in outside. This slide explain what kind of product Rakuten Travel is developing. Also what kind of framework, libraries we need to develop through development. I think especially KPI tracker is kind of unique, and interesting topic for you guys. ※ONLY JAPANESE SLIDE"
  },
  "microservice-meetup": {
    "title": "Microservices from Backend/FrontEnd point of view",
    "1": " is meetup for discussing/sharing about microservices and related topics.",
    "2": "I did presentation at Finc.inc. I shared how to change application, component architecture from Monolith to Microservices. And share open issue and how we were trying to resolve issues.",
    "3": "This presentation is consturcted with 3 phases as below.",
    "phase1": "Chapter 1 - Developed many new service as monolithic architecture.",
    "phase2": "Chapter 2 - Extract domain, resource, function as independent api and becoming microservice architecture",
    "phase3": "Chapter 3 - Current approach. When developing FrontEnd application as SPA, how FrontEnd engineer think about microservice architecture.",
    "4": "This presentation is not just explaining about microservice itself, explained how Rakuten Travel architecture was changing, and evaluated result architecture from microservice architecture point of view."
  },
  "job-change": {
    "prologue": {
      "1": "記念すべき、1回目の投稿が、退職エントリーというのもなんなんですが、熱が冷める前に書いておきたいという気持ちもあり、1回目の投稿ということで書かせて頂いています。この度、2019年12月31日を持ちまして、新卒入社以来約10年間働いていた、楽天株式会社を退職します。(以後'楽天'と表記します) 最終出社は11月15日に既に終えていて、現在は有休消化中です。",
      "2": "自分自身、入社した時は、一社に10年近くも務めることは想像もしていませんでした。長い楽天生活の中で、何度か転職を検討することもありましたが、結果として10年も働き続けることが出来たのは、様々な変化や挑戦が、自分に刺激を与え続けてくれたからだと思っています。自分の当時の心境や、どのような技術を身につけてきたのか。振り返りながら、まとめていきます。",
      "3": "※先までの文章でも、感じ取れるかもしれませんが、僕は今でも楽天のことが好きです。今回、転職はあくまで自分の挑戦の為であり、ネガティブなものではありません。(もちろん、会社に感じている課題とかはありますが)"
    },
    "introduction": {
      "1": "藤井貴浩(ふじいたかひろ)です。2010年4月に新卒として、楽天に入社しました。研修後は、楽天トラベルの開発部に所属し、以降約9年間、部署移動はあれど、一貫して楽天トラベルの開発に携わっていました。職種としては、フルスタック -> BackEnd + TechLead -> FrontEnd + Engineering Managerという流れで経験を積んできました。担当サービスは、書ききれないものや、載せられないものなどもあり、一部となりますが、下記のサービス等を担当していました。",
      "2": "入社した理由とかは、下記のリンクに書いてあります。(そのうち見れなくなるかもですが)。あと、書いてないこととしては、当時行きたかった外資を受けて落ちたという経緯もあります。"
    },
    "services": {
      "travel": "楽天トラベル(主にアウトバウンド(海外旅行), ホテル、航空券予約関連)",
      "extranet": "楽天トラベル Supplier(管理画面)",
      "internal": "社内ツール",
      "accounting": "経理システム",
      "inbound": "インバウンド(訪日外国人旅行向け)",
      "connectivity": "外部システム連携",
      "inquiry": "問い合わせ当番",
      "newApp": "新規アプリの開発",
      "newPlatform": "refacroring, redesign architecture, system"
    },
    "english": {
      "1": "まず、何と言っても(?)、僕が入社した2010年は楽天が英語公用語化を発表した最初の年です。僕も内定を頂いた段階では英語化の話は知らなかったので、確か内定式か何かの集まりでこの発表を聞いた時に衝撃が走ったことを覚えています。社会人は何があるか分からないなって思いました笑。",
      "2": "最初の5年ほど(長いw)は私自身の英語の能力が低く苦労したこともありますが(いや、今でもありますが笑)、何よりダイバーシティや、文化の違いなどを理解したり、受け入れたり、考慮することに苦労した記憶があります。英語を話せること自体も大切ですが、考え方の違いを知る(まずは理解しようとする)ことが、特に一緒に仕事する上で大切だと思います。(とはいえ自分の中に根付いていた考え方などもあり、1日2日で対応できたこともなく、少しずつ、時間をかけて理解できるようになってきた気がします。)",
      "3": "この頃の苦労があって自分自身が成長できたのは間違いないですが、当時働いていた、外国籍の人たちは、今の環境よりも、だいぶ色々なストレスがあっただろうな、、と思います。その人たちが、今の職場をみたらどう思うんだろうな、、と偶に思います。当時は、朝礼で少し英語を話したり、英語でランチしたり、そんなことをしながら、地道に勉強したりしていました。自分がある程度英語が話せるようになったのは、仲の良い友達ができて、彼らと休日ご飯食べたりするようになってからな気がします。気づけば話すことに抵抗は無くなっていました。",
      "4": "結果、楽天で英語を身につけられたこと、ダイバーシティの理解を深めることができたことは幸運でした。"
    },
    "1-3year": {
      "1": "新卒研修や開発研修を終えた後(正確には開発研修中に配属されることになった為、終えてはいない)、配属先には楽天トラベルを選びました。トラベルを選んだ理由は3つあって、花形である市場を超えるサービスにしたかった/海外展開や、世界をターゲットにしていること/会社の同好会であった先輩がいい人だったという理由で選びました。",
      "2": "トラベルに配属されてから、OJTとして、3ヶ月ほどはハギレ案件とよばれる、比較的小さい規模の修正やバグ修正などをメンターにサポートしてもらいながら、進めていました。良かったことは、プロダクトや、チーム関係なく修正するので、色々な人に顔を覚えてもらえることや、サービスを知る(特に管理画面や社内ツールや、バッチなどの表に見えない部分)ことができたことです。",
      "3": "OJTを終えた後は、国際業務チームに配属され、主に海外に関連するシステムの開発を行いました(主にJava)。ここでは上司や先輩に恵まれ、挑戦させてもらいつつ、守ってもらいつつ、仕事をすることができました。また、海外に関連するということから、早い段階で多言語化や、国や地域毎の仕様差分と向き合うことが出来ました。",
      "4": "最初の1年位は新規のサービスや機能追加/修正をひたすら行いました。基本はユーザ画面と管理画面に関連する開発でしたが、経理関係のシステム開発なども経験できたことは貴重でした。(あまり好きではなかったですが笑)",
      "5": "そして、会社に入って1年目が終わりそうな2011年3月11日、地震がありました。地震があってから1週間位は、志願して大阪で仕事をしていました。サービス開発の重みを何よりも感じた1週間でした。",
      "6": "その後は、案件をこなしつつ、巨大なMonolithicアプリ群を機能別に切り出していくことをやっていました。平行して、今までのサービス単位の組織編成から、機能別に組織も変わっていきました。",
      "7": "この位のタイミングで、小規模なチームやプロジェクトをリードするようにもなり、(意図されたことかはどうか分かりませんが)割と外国籍多めなチームで構成されることが多かったので、このあたりから英語で仕事することが徐々に増えていきました。",
      "8": "ある程度プロダクトを分割してからは、API化を進めていきました。(実際には平行して行われたり、API化を先に進めたものもあります)",
      "9": "その頃から予約ドメインをメインで開発するようになりました。トランザクション周りの知見とかもあるのですが、何よりも障害を出した時のインパクトが凄まじく、あの規模のプロダクトで、監視や運用、緊迫感を体感できたことの方が、貴重だったのかもしれません。",
      "10": "この頃から、ちょこちょこ勉強会などで話をするようになりました。",
      "11": "あとは、通常の業務と切り離される形で、問い合わせ当番という仕事が担当制でありました。現在では、専任の組織があるのでない役割なのですが、当時は当番制で、事業からの(技術的な)質問などに対応していました。普段事業側と関わることが無い人間としては結構緊張するのですが、サービスを利用している人と直接やりとりする機会は貴重でしたし、ドメイン知識や、ログの調査能力とかは結構鍛えられました。あとは、時間管理。いつまでに何を答えるとか、少なくともここまでは明らかにする。この時間までにできなかったら別途チケット切って対応する旨を伝えるなどの、時間管理能力も身についたりしました。ただ、本番作業をする上での課題や、サービス規模が拡大するにつれてドメイン知識が薄いプロダクト調査効率の悪さや、メインで進めているプロジェクトの進捗を阻害する(こともある)、、などの副作用もありました。その結果、専任の組織が作られ、バグなどが彼らからエスカレーションされる形で、対応する形に変わっていきました。"
    },
    "4-6year": {
      "1": "2,3年目あたりから、APIに機能を切り出して行ったものの、当時は単純にクライアントに特化した巨大なAPIが多かったので、ジェネリックな概念や、共通のドメインなどを抜き出して、APIとして切り出したりしながら、少しずつmicroserviceな感じに寄せていきました。ただ、なかなか既存のビジネスロジックや要件の調整に苦労する部分も多く、そんなに綺麗に分割できないところも多々ありました。",
      "2": "また、この頃から、プロダクトマネージャ(PDM)組織ができ、明確にPDM, DEV, QAなどのrole、組織が確立し始めました。この頃になって、始めて設計書(DevSpec)を書くようになりました。",
      "3": "2014年頃の組織の状況や、プロジェクトについては、下記の発表にまとまっています。",
      "4": "この頃から、Spring, Spring Bootを利用して開発する機会が増え、JSUGのコミュニティなどで発表させて頂いたりもしました。",
      "5": "6年目頃に、約半年くらいかけて、3人ほどで、大規模なリアーキテクトをしようとしていたのですが、既存の仕様の洗い出しや、要件を削る作業な難航し、思ったように勧められず、苦しみました。。(結局これ自体は達成できず)。振り返ると、出来たことばっかりじゃなくて、出来なかったことや、失敗したことが割と鮮明に思い出されます。",
      "6": "また、この頃から、社内のキャリアとして、SpecialistとGeneralistという二つのラダーが出来ました。決して早いタイミングではありませんが、徐々に技術力や、IC(Individual Contributer)が評価されやすい土壌もできてきました(僕はGeneralistラダーでした)。ラダーがあるだけで解決する問題では決してありませんが、こういった仕組みが1年目(2010年)からあれば、もっと活きたであろう優秀なエンジニアがいたな、、と思います。"
    },
    "7-9year": {
      "1": "7年目あたりから、UIに専念することになりました(ついに!)。エンジニアとしてはほぼフロントエンドに専念し、Engineering Managerとしては、Webとスマホチームを担当していました。",
      "2": "もともと、トラベルではあまりフロントエンドに専念する人はいなかったのですが、2016年にPOCとして比較的小さな規模の管理画面をReact + Reduxで実装する機会があり、当時の上司の協力もあり、設計、実装に参加することが出来ました。プロダクトのフィードバックが比較的良く、現在では、新規のフロントエンドアプリをほぼ全てReactを利用して作成しています。とはいえ、もともと我々の組織でフロントエンド専任で働いていたのは1,2人しかいなかったので、Reactを使うことになって以降、上司や同僚と一緒にほぼ1から人を採用して、組織やチーム、文化を作っていくという経験ができたのも面白かったです。",
      "3": "今では、ReactやVueの経験があるエンジニアも沢山いらっしゃると思いますが、当時はまだまだ実例も少なく、経験者という観点では、海外から方が多く、、今までで一番グローバルな組織になりました。海外の名だたる企業から参加してくれたメンバーもいて、技術的にも非常に多くのことを学べました。",
      "4": "あとは、よこみちさんと仕事できたことがよかったです。",
      "5": "また直近2年ほどは、非常に大きな規模のプロダクトの新規開発をしていました。この頃からマネージャ職ではありましたが、設計や要件定義を終えた後は、1エンジニアとして、がっつりとプロダクト開発にも携わっていました。ある程度プロダクトが出来てきた後は、プロダクトの改善の為に組織を変更したり、よりチームが自己組織化して動けるように、ビジョンやミッションを明確化したり、組織図上のチームを無くして、メンバーと一緒に都度組織を自分たちで編成してプロジェクトに取り組む体制を作ったりしていました。特に、Manager-led teams -> Self-managing teams -> Seld-designing teamsを意識しながら権限の委譲を進めました。",
      "6": "まだまだ自己組織化については道半ばという所もありますが、メンバーやリーダーのオーナーシップが育ってきているので、彼らが、今の組織を次の段階に進めてくれるはずです。",
      "7": "というのが、約10年間の楽天生活でした。トラベルのアーキテクチャがどのように変わってきたのか、今どういうことやっているのか、ということに関しては自分の過去の発表を見て頂く方が分かりやすいと思います。",
      "8": "自分が最後にやってきた、フロントエンドの組織の話をすると、これからもやっていくことが沢山あります。特にある程度の規模でReactを利用した開発をしたい方、フレームワーク作成などに注力したい方、グローバルな組織で働きたい方にはめちゃくちゃおすすめです。こちらは、継続して組織を拡大していく予定なので、ご興味ある方は、下記ご覧ください！自信を持っておすすめできる組織です。"
    },
    "job-change": {
      "1": "僕は楽天が1社目の会社なので、今まで転職した経験はありません。どこかで他の会社を経験したい、他の会社で自分のスキルやマネジメントの再現性があるか確認したい、と考えることは今までもありました。なので、転職を考えたのは今回が初めてではなく、今まで何回かありました。",
      "2": "また、比較的プロジェクトが一区切りついたタイミングで、自分のモチベーションを再度見つける必要がありました。会社に残るにしろ、色々な選択肢を見た上で、自分が会社に残って今一度貢献したい、という想いになりたかったからです。という所から、他の会社の話を聞きにいったりするようになりました。",
      "3": "話を聞く際には、",
      "points": {
        "1": "ビジョンやミッションに共感できるか",
        "2": "自分が解決するべき難しい/成長できる課題や挑戦が見つけられるか",
        "3": "グローバルな環境である / もしくはグローバルなビジネスを展開している",
        "4": "+ (責任あるおしごと(無い仕事なんてないとは思いますが))"
      },
      "4": "という3点 + α を主にみていました。会社は、親しいエンジニア経由で話を聞かせて頂いたり、Linkedin経由でやりとりをさせて頂きながら、探していました。Linkedinに関しては、やりとりする中で自分が信頼できる人、会社を見つけることができ、彼ら経由で紹介してもらっていたりしました。リクルーターは外国籍の方だったので、外国籍の方から日本の会社を紹介してもらうっていうやりとりがちょっと面白かったです。",
      "5": "転職活動をしてよかったのは、会社の経営陣や、優秀な方々とお話しする機会を多く頂けたことです。彼らと話をする中で、自分の視座が高まったり、仕事や目標に対する考え方について考えさせられたりしました。そして、単純な採用面接に止まらず、色々とアドバイスを頂けたことにも、大変感謝しています。一人一人にきちんとメッセージ送れていないのですが、本当にありがたかったです。",
      "6": "また、僕は楽天でエンジニアの採用面接を担当していたので、どういうことを聞かれるのか、ということに興味がありました。何を意図した質問なのか、と考えながら受ける面接は面白かったです。一方で、面接をしている側と言えど、質問にうまく答えることができないこともあり、難しさも感じることができました笑。日本の会社だと技術の質問はあれど、コーディング試験は基本なかったのですが、海外の会社は、Engineering Manager職であれど、ほぼ間違いなくコーディング試験がありました。とはいえ、コーディング試験がすごく難しい所は受けていなくて、HackerRankとかで少し準備する程度でした。Leet Codeとかやってみたらよかった。",
      "7": "何社かお話しを聞く中で、自分の中で上記の3点を満たす会社を見つけることができました。加えて、良い評価、オファーを頂くことができ、転職を決意しました。現在はまだ楽天社員ですので、来年次の会社に正式にjoinし、ある程度落ち着いてきたタイミングで、次の会社でどのような挑戦をしているか、改めてご報告させて頂ければと思います。"
    },
    "skills": {
      "1": "Single Page Applicationの設計、開発、運用",
      "2": "Web APIの設計、開発、運用(主にJava/SpringBoot)",
      "3": "多国籍、国際的な大規模な組織のマネジメント(10カ国以上、30名以上、4チーム)",
      "4": "フロントエンド、バックエンド、ネイティブアプリケーション、フルスタックチームのリード、マネジメント",
      "5": "グローバル(i18n, l10n)なアプリケーションの設計、開発",
      "6": "クライアントアプリの設計(Webアプリケーション)",
      "7": "旅行,予約ドメインの知識",
      "8": "日本、日本以外での採用面接、採用実施、キャリア開発、1on1、On boarding"
    },
    "experiences": {
      "1": "楽天での経験を経て、自分では主にこういった能力を身につけることができました。(ソフトスキル寄りものは省いています)",
      "2": "他にも、監視、調査や負荷対策などの経験もあります。特に、マネジメントの規模や特性、採用経験などは、楽天だからこそ経験できたものだと思います。また、並行してSpringBootやReactなどが導入できて、自分が学びたい技術スタックが学び続けられたことも大きかったです。"
    },
    "benefits": {
      "1": "※あくまで、自分が見えている視界からの主観的な意見です",
      "lists": {
        "1": "英語(正直に言えば、今時点で英語がそんなにできなくても、TOEICの点数を取ったり、自分自身が英語を話すことに対してポジティブであれば、英語で仕事することが出来ることは、ありがたいです。もちろん仕事の内容によっては、より高い英語力が求められるところもあると思いますが)",
        "2": "海外展開を意識したビジネス,プロダクト開発(これが本気でやれる会社はそんなに多くないと思います。もちろんそれは単純な多言語化とかローカライゼーションだけではなく、国やマーケット毎の特性を理解したり、その中でどうgenericな部分とspecificな部分を作っていくかとか、、)",
        "3": "大規模、高トラフィックなプロダクトの開発と運用(案外、これは意外と経験しにくいことなのかもしれない)",
        "4": "有給(これはまぁ、部署とかにもよるのかもしれませんが、とりやすいです)",
        "5": "知り合いがたくさんできた(たくさんの同期、同僚がいるし、ランチが無料なので、気軽にいろんなひととランチに行って話をできる文化がある)"
      }
    },
    "thanks": {
      "1": "Facebookのポストでは、色々書ききれなくて、ここに出来るだけ書こうと思ったんですが、結局書ききれなかったです笑。",
      "2": "色々と書かせて頂きましたが、僕が10年間も楽天で(それなりに)活躍、貢献できたのは、楽天で出会った人たちのおかげです。",
      "3": "結構生意気に、先輩方と絡んだりしてた気がするのですが、朝先輩にEdyを借りにいく(ほぼ話しにいく為なんですが笑)からはじまり。インフラで分からないことがあれば、すぐ質問できたり、各サービスに詳しい人がいたり。そして、上司に恵まれ、ロールモデルとなる先輩がいたり、同期や優秀な後輩、パートナーさんに刺激をもらえる環境もありました。",
      "4": "仕事意外でも同好会(バスケ)の活動を通じても、いろんな先輩方にお世話になりました。",
      "5": "そして、転職するにあたって、なんだかんだ負荷や迷惑をおかけしている部分はあるのですが、結果的に快く送り出してくれた上司や関係者のみなさんにも本当に感謝しています。",
      "6": "やっぱり月並みなまとめになってしますが、ここで得たものを活かして、次の会社でより大きな成果を出し、成長した姿を見せ、いつの日かまた一緒に仕事できたらいいなと思っています。ありがとうございました！"
    }
  },
  "vision-driven": {
    "good": {
      "1": "IC(Indivisual Contributor),中間管理職などの立ち回りの人が、自分が他人モードにいるのか、自分モードにいるのか意識できるようになる",
      "2": "直感で感じたことを、どのように論理や、具体的なものにしていくのか、非常に色々な手法が理由付きで説明されているので、自分が受け入れやすいやり方がみつかる",
      "3": "プロトタイピングや、Design Thinkingなど、プロダクト開発、開発プロセスをそのままイメージできる話も多く、エンジニアは、プロダクト開発会社にいる人がより具体的なイメージを持って、本を読み進めることができる"
    },
    "cons": {
      "1": "この本では特に触れられていないが、局所的に、他人モードの思考や視点が必要(あるいは全員でなくとも、組織の一定の人は)になりうるケースはあるのではないか",
      "2": "基礎的な力、素地があった上、もしくはそれを身に付けつつ、この思考は大成していく。語られてないが、(むしろ当たり前のように)知識を学んでいくことが前提にある",
      "3": "考えを組み換えたり、妄想したりする際に、紙に勝るものはない、という話だが、個人的にはiPad+Conceptはかなり良いレベルでこの本で紹介されている手法にfitする"
    },
    "personal": {
      "1": "比較的他人モードに入ることを厭わないタイプの人間である",
      "2": "Engineering Managerとして開発組織を見ていく中で、VISIONやOKRは他人モードな思考を自分モードに切り替える手段として、良く働くことを認識することができた"
    },
    "1": "この本は、自分にとって良い本だったと思います。なぜなら、",
    "2": "からです。",
    "3": "1月から新しい会社に勤めているのですが、社長からもしよかったら是非と2冊頂いたうちの1冊を読んでみて、色々おもうところがありました。自分の考えをまとめたり、整理する意味も含めて、記事としてまとめています。ちょうど、新しい会社に入り、開発組織のメンバーがどのように会社のVISIONを捉え、理解して、個々の目標に落とし込んでいけるのか、ということについて考えていたので、そういった意味でもこの本を手にとったタイミングが良かったです。",
    "4": "この記事では、本の詳細にはあまり触れすぎず、この本の中で出てきたキーワードと自分の経験を照らし合わせて、感じたことを少し書きます。もしも興味を持たれたら、是非本を読んでみて下さい。",
    "4-1": "大きく、本書には次の2つのことが書かれています。",
    "topics": {
      "1": "他人モードと自分モードの話",
      "2": "自分モードから生まれる直感や妄想をどのように自分の中に落とし込んでいくのか"
    },
    "5": "主に、この2つに関して、自分が考えていることをまとめます。",
    "6": "まず、他人モードと自分モードについて説明する必要がありますが、いくつかの表現や特徴が本では述べられています。僕としてしっくりきているのは、下記の文脈です。",
    "7": "他人モード : 「どう自分が感じるか」よりも「どうすれば他人が満足するか」を大切にしている状態",
    "8": "自分モード : 「直感から考え始めることができる」状態",
    "9": "正直、いわゆる日本人的な感じだな、と思うところもあります。前職では、他人モードに入り込んでしまう人はそんなに多くはなかったです。※あくまで、自分が見ていた局所的な範囲において。一方で直感ややりたいことを落とし込んだり、結びつけることに苦労している人は多いと思いました。",
    "10": "自分が感じていることとしては、”他人が満足するか”考えること自体は悪くない。ただ、そのモードに浸り続けた結果、",
    "11": "「何がしたいのか分からない」",
    "12": "「どう思うのか聞かれた時に、自分の直感が浮かんでこない」",
    "13": "というような状態になることが問題ということです。",
    "14": "自分の仕事を振り返ってみると、他人モードに結構どっぷり使っているタイミングはありました。これは、主体性がなく、全くやる気が無い状態のことを指しているわけではなく(それはそれでもちろん課題がありますが)、むしろ忙しいとき。圧倒的な作業量を周りと分担できなかったり、様々な事情で自分が大量に抱えて、圧倒的にアウトプットにのみ集中する状態(そのアウトプットが他人モード寄りのためのもの)が中長期的に発生してしまう時に起きやすいと感じました。(そして、僕はその状態に割と入りやすい。これは自分の課題)これは、忙しくない時に起きることではなく、忙しい時にも場合によっては起きやすくなります。ただ、そんな自分を客観的に見れて、今は他人モードで、自分モードだったらどう考える、こうするというものがある中で一時的に他人モードのことを客観的に見れるかどうかが大切です。",
    "15": "一方で、今の自分の段階であれば、そういった状態よりも、OKRやVISIONといった会社や、代表の想いや目標を自分で理解し、自分がそれに貢献するために何をしたいかを考え、主体的な行動に集中出来ることの方が幸せです。",
    "16": "尚、この本には、自分が他人モードに慣れている時に、どうやってその状態を抜けるきっかけをつくったり、自分の想いを見つめなおすことができるか、といったことが書いてあるので、そういったことに心当たりがある人は、一度本を読んでみて欲しい。",
    "17": "これはその次の状態(というか前の話題が本的にはスタートラインに立つみたいな感じ)の話になります。今、あなたは自分モードになり、自分の直感や妄想からアイデアを抽出できるようになった状態だったとします。ただ、その状態ではただ、直感を感じ取れている状態にすぎません。その直感はゴールではなくむしろスタートだと思います。直感をただの思いつきで終わらせずに、どうやって論理に落とし込んだり、具体化していくか、ということを考える必要があります。",
    "18": "そして、直感の時点ではまだ根拠もない。少なくとも言語化もされていません。周りを巻き込むにはあまりにもあいまいだったり、荒かったりします。そいうった状態から、どうやって自分の思考を整理したり、落としこんで直感に対する理解を深められるかということは、直感で感じたことを成果に出す為に大切ですし、特に他人も巻き込む為には必要不可欠だと思います。",
    "19": "ただそこで、全部を事細かに具体化しないといけないのかといえば、そんなことはなく、それは根拠やストーリーを持って語られるVISIONであったりするんだと思います。そして、OKRなどを通じ、各メンバーが各々の責任範囲において自分モードでGoalやPlanとかを考えて動いていくこと(≒ティール組織)ができたらいいのかなって。",
    "20": "この本の中に、年に一度、お互いの振り返り(キャリアや仕事の)ができる友達がいると書いてあって、それはまさにその通りだと思いました。ので、若干募集中です。笑。",
    "21": "iPad + Conceptの話は別途書きます。",
    "22": "余談ですが、Vision DrivenというテーマでMITの石井裕さんが話されていたプレゼンが良かったです。",
    "23": "実は、2冊頂いた本のうちのもう1冊も、佐宗さんが書かれている本で、上記の本のより実践的なところに触れられているらしい。ので、これからその本を読んで、上の考えをもう少し昇華させ、自分に落とし込めたらいいなって思っています。"
  },
  "one-month": {
    "1": "早いもので、転職して正式に1月から働き始めて、一ヶ月が経ちました。規模やビジネス、環境など、色々と違うことがあり、日々変化を体感する刺激的な毎日を過ごしています。とはいえ、少しずつ慣れていっている部分もあります。この一ヶ月で自分が感じたことを整理する意味でも、この一ヶ月働いて感じたことについてまとめます。",
    "2": "また、具体的な仕事内容に関連するものに関しては意図的に取り除いています。もし何か気になることなどがあれば、ランチかTwitterのDMなどでも下さい。お伝えできる範囲でお伝えします！",
    "3": "話を進める前に、環境で働いているかという前提がないとイメージしずらいと思うので、簡単に。前職は楽天です。当サイトのarticlesにある記事を見ていただければ、どのような環境で仕事をしていたのかなんとなくイメージがつくと思います。比較的大きな規模の開発組織(200人程度)でUI周りの開発を中心に、Engineering Managerをしていました。現職はWealthPark株式会社です。あまり公開されている情報は多く無いですが、規模や事業内容につきまして、こちらの記事などに多少紹介されています。",
    "4": "では、転職して感じていることとそれに対する所感をまとめます。",
    "5": "これは、Comfort zone周りの話です。転職に伴う新たな期待や責任、実際のプロジェクトを始めた状態において、少なくとも現時点においては気持ち的な負荷はかかっています（ストレッチゾーン）。どちらかというと、自分でかけている部分もあります。また、現状において、これは仕事時間やプロジェクトのスケジュールなどではなく、プレッシャーや不安などによるものです。これは転職において期待していたことの一つではあるので、上手に付き合いながら自分の成長の最大化につなげていきたいと考えています。ただ、パニックゾーンに入らないようにすることについては、常に気をつけたいと思います。",
    "6": "僕は、前職で働いている期間が比較的長かったので(約10年)、特に後半はメンバーや先輩後輩、他部署の方々と関係や信頼に助けられた部分がたくさんありました。今は、もう一度そういったものを焦りすぎずに、築いていけたらと思っています。積み重ねが大切です。",
    "7": "次に今の会社で(自分にとっては色々感じたことがあった)特に前職とは違う点や、習慣などについて書いていきます。",
    "coffee": "現職の好きな文化です。会社では、3時になるとコーヒー行く?というメッセージがSlackのエンジニアチャネルに流れ、みんなで近くのファミリーマートまで散歩し、コーヒーを買って話しながら帰ります。全員が絶対行くというわけでもなく、行きたい人はという感じです。またエンジニアの人数が増えてくると状況も変わるかもしれませんが、オンボーディングに非常に有効であると感じています。仕事を初めてすぐにはあまり直接的に関わることのないエンジニアもいますが、散歩を通じてどんなことやっているのか話をしたりすることができます。もちろん仕事とは関係がない話をすることも多々ありますが笑。規模的に問題がない間は続けていきたい文化だと思っています。また、エンジニア全員でなくとも、チームで行くのもよさそう。",
    "onboarding": "僕にとっては新鮮でした。Onboardingとして、入社時に色々な方から事業説明や部署の説明がありました。そして、およそどこの会社でも、プロダクト/プロダクト切りがあるよみたいな話をどなたかがされると思います。現職において、それはQAのリーダーの方が主導していました。(エンジニアの方も一緒に入っていましたが)。QAの責任や役割は組織によって違うとはあいますが、プロダクト、プロダクトの仕様、課題について一番理解している、ということを体現しているように感じました。",
    "scrum-1": "全てのプロジェクトで行われているわけでもないですし、人数やプロジェクトの内容、特徴があって行われた一つの例だとは思っています。また、背景としては、そのQAの方はCSPOを持っていて、きちんと知識があるということも前提条件としてはあります。QA, Scrum Masterそれぞれの責任範囲は違うので、頭を切り替えることが必要になります。が、これによって、QAが",
    "scrum": {
      "1": "次スプリント時にスコープに含まれているリリースを明確に把握している",
      "2": "開発途中に発生した問題や仕様変更をキャッチアップし、情報のアップデートが行いやすい",
      "3": "開発初期フェーズからプロジェクトに当事者感を持つことができる"
    },
    "scrum-2": "は実現されているように見えます。ただ、これらの実現方法がスクラムマスターを兼任するしかないのか、というわけではありません。場合よっては良くないコントロールをしてしまう場合もあるでしょうし、難しさもあります。",
    "squad-0": "Squadは2012年頃に、Spotifyが提唱した、大規模なアジャイル開発に対するアプローチです。",
    "squad-1": "この内容に関しては、もう少し自分自身で体験した後でこれをテーマにした記事を書こうと思います。というほど、今の会社に入ってから色々考えたり悩んだりしている部分です。入社1ヶ月で感じていることなので、今はある程度大きな粒度の話になってしまいます。",
    "squad-2": "現職は垂直型組織 / Squad色が前職と比べて格段に高いです。Squadはマトリクス型だとは思いますが、前職と比べて、垂直型で動くことがいずれにしても多いので、その点に特に自分は前職とのギャップがあります。また、現職の組織が多いわけではないので、1Squadの粒度は比較的小さいです。Squad毎に責任はかなり委譲されていて、各Squad判断で開発を進めます。それによって、リリース期間を現状の組織において短くできている、というのは確実にあると思います。",
    "squad-3": "一方で、比較的小規模の人数でこれを行うと",
    "squad": {
      "1": "実装されるプロダクトのquality, productivityなどがアサインするエンジニアの思想や技術力にかなり依存する",
      "2": "技術的負債は別途向き合う必要がでてくることが多い",
      "3": "特定のメンバーがSquadをかなり跨ぐ"
    },
    "squad-4": "ということが発生します。そこで活躍するのがチャプターリード/TLだったりすると思うのですが、まだ試行錯誤している所です。",
    "squad-5": "規模が違う所もありますが、メルペイの下記の記事は比較的共通のコンテキストがありそうです。",
    "squad-6": "また、今後バックエンドがよりプラットフォーム化していくことによって、Squadとの噛み合わせが難しくなる部分もSquadの切り方によっては発生すると思っています。",
    "qcd-1": "6とも関連しますが、QCD(qauality/cost/delivery)についてです。今の組織で適切な位置はどこか、ということを考えています。特に一番違うのはCostです。リソースという意味でのCostの有限が圧倒的に前職と比べて見えるので、その上での戦略の提示を求められている感覚はすごくあります。MVP(minimum viable product)との兼ね合いもとても大切です。現職でよくやり取りするPDMの方は、MVPに対する意識が高いので、その点は相談がしやすいです。ただ、最近行った勉強会でA1Aの佐々木さんが話されていた下記の点についても考える必要があると考えています。",
    "qcd-2": "前提として、まずMVPを考えるというフローは必ず必要ですが、その先、実際により多くの人に使ってもらえるようになるまでの道のりについても考える必要があります。特に前職よりもSaaS色が強いので、上のスライドで話されているような内容について考えることも多そうです。",
    "8": "他にも色々と感じていることもあるので、箇条書きで書いておきます。もし気になるものがあれば、直接聞いていただけたら幸いです。新しい環境になり、インプットすることが非常に多いですが、このように頭を整理しながら、自分の中に落とし込んでいきたいです。",
    "1mmonth": {
      "1": "定例MTG",
      "2": "デイリーハドル",
      "3": "評価",
      "4": "採用",
      "5": "グローバルな環境",
      "6": "コードレビュー",
      "7": "費用対効果",
      "8": "Visionを実現するには",
      "9": "マイクロサービス",
      "10": "レポートライン",
      "11": "SaaS"
    }
  },
  "tutorial-document": {
    "1": "色々話の流れを省略すると、今日のmtg中にインターン向けのチュートリアル資料(フロントエンドエンジニア向け)があったらいいなという話なりました。前職でもインターン向けの資料やプログラムを比較的作っていたことが多かったので、考えていることを一度まとめようと思い、記事にしました。",
    "2": "資料の対象",
    "target": {
      "1": "社内、会社に入る前の資料。したがって、会社の実プロダクトの情報などはほぼ入れない",
      "2": "自社で利用している言語やフレームワークにたいする経験が浅い、もしくはない",
      "3": "自走するのに苦労するタイプの人向け（初、中級者？）"
    },
    "3": "下記のような場合は、意識する点は異なるかもしれません",
    "outOfScope": {
      "1": "ユニークな練った課題を提供したい",
      "2": "使い捨て（来年は使わない）の資料を作りたい",
      "3": "研修、インターンプログラム用の独立した部署があり、資料やプログラム作成に多くのリソースや時間を裂くことができる"
    },
    "4": "では意識していること5つです。",
    "first": "これは、参照を適切に使い、自分で全て説明を書かない、という意図で書いています。特に、公式チュートリアルなどに書いてあることと同じことを書いてしまうことが最たる良くないケースだと思います。もしも既にあなたが説明したい何かが上手に説明されている資料がある場合は、そちらの資料に目を通して頂いた方が無駄や、変なミスも起きないので良いです。但し、いかに読んでもらいたい資料が多くとも、非常に参照をただ羅列するだけでは、読んでいただくことは難しい(Slackにただただ流れるリンクをあなたが全て読まないように)です。なぜこの資料が良い、大切なのかという補足や説明を加えることは良いと思います。",
    "second": "これはプログラミング、技術系の資料に共通することです。言語やフレームワークは当然アップデートしていきます。特定のバージョンの言語やフレームワークを利用した実際のコード例などを記載していく場合は、どこかで使えなくなったり、動かなくなったりするでしょう。本だと保険的な対策として、バージョンを明記する場合が多いと思います。但し、仮に古いバージョンを利用した資料を使ったとして、インターンとして入社後にそのバージョンのプロダクトを触らないのであれば、古いバージョンに触ってもらう意義はほとんどありません。なので、そういった資料を作る場合は、基本的に依存する言語やフレームワークの更新に応じて、資料をメンテナンスする必要が出てくるということです。全く経年劣化しない資料を作成するのは難しい場合もありますが、最新バージョンのリングが固定の場合は、そちらにナビゲートし、最近の環境で試してもらえるような資料を維持する方が良いでしょう。",
    "third": "1とやや関連しますが、逆に書かないと意図が伝わらないこともあります。それは、課題をどこまで理解してもらうことを期待しているのか、なぜこの技術を事前に学んでおいてほしいのか、といった理由づけの部分です。ここには、それぞれの会社や部署独自の背景がある場合が(おそらく多く)、それを説明することで、より実際に仕事したり、プロジェクトに入っていただく上で必要だということを伝えることができます。",
    "fourth": {
      "1": "甘いという人もいるのかもしれませんが、次にやる側にとって辛いのは、1-100まで全部やってくれ、それ以外はない。という感じの資料です。目的にもよりますが、大抵の場合、チュートリアル資料を配布する理由は、",
      "2": "チュートリアル資料を全て完了させる(課題や宿題のイメージ)",
      "3": "ではなく、",
      "4": "チュートリアルを利用することで、会社に必要な技術、知識を得ることを楽にする",
      "5": "ことにあると思います。",
      "6": "チュートリアルを作り込んでいくと、多大な愛が注ぎ込まれて、全部やってくれまじで、、という感じになることも多いと思いますが、全部やってくる前提の資料をくばり、いざ現場に来て頂いた時にやってなかった場合、ここでお互いに色々コストが発生し、あまりうまくいくイメージがありません。",
      "7": "できるだけ確実にやってほしいことは絞り、それ以外は、もしも事前に理解していただけたら業務上役に立つ、こういったことができるようになるという流れで追加項目を用意しておくのが良いです。そして、追加項目こそ丁寧に、かつ大量に用意しておいても良いと思います。たまにはまってめっちゃ学習してきてくれて、即戦力な感じできてくれることもあります。"
    },
    "fifth": {
      "1": "4に記載している",
      "2": ">チュートリアルを利用することで、会社に必要な技術、知識を得ることを楽にする",
      "3": "とも関連しますが、基本的に、エンジニアはどこかのタイミングで自走して学習していくようになります。それは公式チュートリアル、公式のドキュメントを読めるようになったタイミングであったり、自分でいくつかのプロダクトを作る過程であったり。自走してもらえる人には、チュートリアルはいりません。というか、そういう人にも意味があるチュートリアルを書くというのは、非常に高い品質のチュートリアルであることが求められる、という言葉が正しいかもしれません。"
    },
    "5": "以上、簡単になりますが、意識していることです。チュートリアルや、オンボード向けの資料を作られる方の助けになれば幸いです。"
  },
  "vpoe": {
    "pro": {
      "1": "早いもので、転職してから早5ヶ月が経ちました。4ヶ月を経て、自分の仕事に対する慣れや、環境や立場の変化など、色々なことがありました。",
      "2": "一つ大きな出来事として、4月から、現在働いているWealthParkで新たにVPoEに就任しました。今は、フロントエンドだけではなく、より包括的にEngineeringと向き合っています。今回の記事では、今自分がどういうことを考えていて、(まだこれからやっていくことも多いですが)、どのような取り組みをしているのか、ということについてまとめていきます。"
    },
    "pro2": {
      "1": "WealthParkの組織体系について少し触れておきます。WealthParkでは、僕がVPoEとして就任するタイミングでは、VPoE, CTOはいない状態でした。約20名のメンバーで、エンジニア組織は非常にフラットな組織で仕事をしていました。(プロダクトマネージャ組織にはVPoP, デザイン組織にはVPoDがいます。)",
      "2": "以前の記事でも少し触れましたが、WealthParkの開発組織、手法はSpotifyが提唱しているSquadを強く意識したものとなっています。水平方向の組織(FrontEnd, BackEnd, QA, Mobileなど)をみるChapter Leadは存在していました。(僕は今年1月入社以降、FrontEndのChapter Leadとして仕事してきました。)",
      "3": "参考 : SpotifyのSquadを紹介する文章に書かかれている、Chapter Leadの説明はこちらです。",
      "4": "The chapter lead is line manager for his chapter members, with all the traditional responsibilities such as developing people, setting salaries, etc. However, the chapter lead is also part of a squad and is involved in the day-to-day work, which helps him stay in touch with real",
      "5": "今回、ChapterLead上のラインとして、僕がVPoEとして入ることになりました。正確には、ChapterLeadはChapterの1員という要素も強いので、既存のエンジニア組織の上のラインとして入ることになった、というのが正しいのかもしれません。",
      "6": "本記事では僕がVPoEとして取り組んでいること、考えていることを紹介していきますが、弊社の状況の補足をいくつか書いておきます。",
      "note": {
        "1": "Squadを意識した組織、開発手法を採用している",
        "2": "VPoE交代ではなく、新たなポジションとしてVPoEとして入る",
        "3": "CTOは現状いない"
      },
      "7": "これらの点を踏まえた上で、読んで頂ければと思います。"
    },
    "vidualize-mywork": {
      "1": "まず最初にやったことです。昨今の情勢を踏まえて、WealthParkではほぼ完全にリモートで業務にあたっています。その為、どのような責任や役割で、実際に僕が何をやっている状態か分からない状態で業務を初めてしまうと、他のメンバーから何をしているかかなり見えづらい状態になってしまいます。",
      "2": "VPoEになった途端、周りの人から僕の仕事が見えなくなり、「あいつは何やっているのか分からない」と感じてしまう状態をまずは避けたかったというのがあります。一方で、自分のVPoEとしての役割や優先度を状況に応じて徐々に定めていく必要があり、全てを最初から明確にすることは難しいとも考えていました。とはいえ、クリアになるまで発信しないという状況も避ける必要があり、ある程度不十分な状態でも情報を公開しようと考えました。",
      "3": "VPoE就任にあたり、メンバーとの1on1を通じてVPoEに対しての期待値のすり合わせを行いました。その上で、まずは自分がやっていることを可能なかぎり公開することにしました。今自分が関わっているプロジェクト、プロジェクトやタスクに対する関わり方、今注力していることは何か、どんなmtgに出て、何を決めようとしているか。などといったことです。",
      "4": "興味がある内容は適宜メンバーからコメントもらったり、DMとかで直接聞いて下さい！って感じにしています。まずは新しい組織になりレイヤーが増えることで情報が伝わりにくくなる、隠れるわけではなく、引き続きオープンに情報を共有する意思表示をすることが一番の目的です。",
      "5": "一方で、改善点は多々あります。メンバーが都度これを見にいくのも手間なので、Daily Reportで業務の共有も別途しています。より簡単に自分が何をやっているか周りから見える状態は常に意識していきたいです。より自然に、何をやっているか共有できる、周りに伝わる方法を考えています。さらに言えば、共有すること自体が最終的なゴールではなく、メンバーが興味がありそうなプロジェクトや、MTGを見つけて、どんどん参加していく、みたいなことを出来るようにしていきたいです。"
    },
    "vidualize-others": {
      "1": "こちらは他部署、社外に向けたものです。僕がWealthParkに来た時、エンジニアが皆凄くオーナーシップを持って、ハードワークしていることが凄く印象的でした。一方でその成果を周りに伝え切れていない点があり、改善できる部分があると考えました。",
      "2-1": {
        "1": "月並みではありますが、まずは他の部署に対してしっかりと成果や取り組みを紹介することで、より信頼を得ていく必要があります。",
        "points": {
          "1": "月次のmtgなどで、成果や進捗を報告",
          "2": "技術的負債の返却の計画や進捗、成果の共有",
          "3": "事業の方がどの粒度で、どういった情報を知りたいのかのすり合わせ"
        },
        "2": "などから始めていますが、様々なメトリクスを取り始めることで、中期的には、数字を使う形で、成果を示していけたらいいなと思っています。また、VPoPを中心にトラブル対応のフローを明確化できたことで、トラブル対応が周りからも目に見えてわかるようになったことも非常に良かったです。"
      },
      "2-2": {
        "1": "社外に関しては今まで全くカンファレンスなどでの発表がなく、ググってもWealthParkの開発組織や技術スタックに触れることが出来ない状況は良くないと捉えていて、今後は様々な形で、僕らの情報をより社外に向けて発表出来たら良いなと考えています。",
        "2": "WealthParkのエンジニア組織は非常に多国籍なチーム(日本人は2人しかいない)ので、英語での情報公開も推進していければと考えています。"
      }
    },
    "process": {
      "1": "開発プロセスの改善にも一部着手しています。WealthParkにも様々なプロダクトがあり、中にはレガシーなプロダクトも存在しています。この中の一つにいわゆる巨大なモノリスなプロダクトが存在しています。",
      "2": "このプロダクトに関連した多くのバグ修正やプロジェクトが同時進行する中で、",
      "improvements": {
        "1": "タスクの優先度管理が難しくなってきた",
        "2": "タスクの優先順位の判断を都度エンジニアがしなくてはならない",
        "3": "Sprintの期限が曖昧",
        "4": "優先度の高いチケットの差込で、プロジェクトの遅延が度々発生(しかもそれの検知が遅い)"
      },
      "3": "しているなどの課題があります。",
      "4": "改善策の1歩目として、プロジェクト以外のタスクとプロジェクトのタスクを明確に分けました。",
      "project": "プロジェクト - Scrum",
      "maintenance": "メンテナンス - Kanban",
      "5": "にしています。",
      "6": "プロジェクトのタスクはきちんとSprintを切ります。一方、メンテナンスタスクに関してはKanbanを利用しています。メンテナンスタスクは、1ボードで、統一されてた優先順位にチケットが並べられ、上から順番に消化できる状態にまずします。",
      "7": "現状比較的優先度の高いメンテナンスタスクが高い確率でスプリント中に差し込まれます。それによって、常にScrumにスプリント中の変更が発生している状態が続いていました。それを完全に改善するわけではないですが、まずはボードを分離する所から初めています。",
      "8": "一方、開発リソースは充分ではなくプロジェクトとメンテナンスのタスクを兼務しているメンバーが大勢います。なので、ボードとしては分かれた一方で、引き続きリソースをプロジェクトとメンテナンスの両方に使う状況は続きます。",
      "9": "こちらに対してまずは、ボードを分け、今実際どれくらいの割合を各人がプロジェクトに割いていて、その位の時間をメンテナンスタスクに割いているのかを可視化します。その上で、それが適切な状況なのか、という判断をしていきます。(別途、タスクのアサインまでのフロー、PriorityのTriageの基準などについても議論しています。)"
    },
    "spotify": {
      "4-1": {
        "1": "WealthParkではいわゆるSpotify Modelをアレンジした開発手法・組織体系を導入しています。細かくはより色々な要素がありますが、基本的に、縦割りはSquad(Product, Project毎), 横割りはChapter(FrontEnd, Backend等)と定義してマトリックス型の組織体系で構成されています。(今回の記事では、TribesやGuildsには触れません)",
        "2": "基本的には、Squad毎に日々のプロジェクトを進行しています。Squad毎に責任はかなり委譲されていて、各Squadで開発を進めます。各SquadにはProduct Owner, Product Manager, FrontEnd, BackEnd, Mobile, QA, Scrum Masterがいて、アーキテクチャ、開発のスコープ、スケジュールの判断などを各Squad毎に判断して進めます。それによって、リリース期間を現状の組織において短くできている、というのは確実にあると思います。",
        "3": "一方で、完全な縦型組織ではなく、横串の組織として、Chapterが存在するので、専門分野に関連した議論や連携はChapter間で行うことになります。(Guildによって進める場合もあります)"
      },
      "4-2": {
        "1": "Spotifyではその開発、組織手法がもたらす最大のメリットとして、'Autonomy(自治)'を上げています。",
        "2": "VPoPのSethが下記の記事で言ってくれている内容が近いと思っているのですが",
        "3": "チームの立て直しにあたり、あるべきチーム像はどの様に描かれていましたか？",
        "4": "良い意味で勝手に動いてくれるチームです。僕が考えるリーダーの仕事は、目標の設定とチームのサポートだけ。あとはそれぞれが自分で動いてくれれば良いと思っています。目の前にある川を渡りたい場合、橋を作れと指示するリーダーシップと、川を渡る方法を> 考えてと指示するリーダーシップがあるとしたら、僕は後者。若い人は自分よりも優秀になると信じているし、彼らのアイディアは自分1人のアイディアよりも優れていると思ってチームビルディングをしています。",
        "5": "Squad, Chapterという組織構造で、より一人一人のOwnership、責任と自由を強化していくことが、この開発手法を採用している一つの大きな目的と捉えています。",
        "6": "僕はよくチームの段階を表す指標の一つとして、下記の図を使っています。どのようにしてチームの自己組織化を推進できるのか、ということを考えています。",
        "organization1": "マネージャ主導型チームでは，チームメンバには単にタスク実行の権限のみが与えられ，作業プロセスの管理やコンテキスト設計，方向付けはマネージャが行います。私たちが見る限り，機能的サイロを形成する専門家グループや，従来的なプロジェクト管理“チーム”の多くが，この形式の実例になります。",
        "organization2": "自己管理型チームではメンバに対して，タスクの実行だけではなく，進捗の管理についても責任を与えます。ITでは，チームのタスク，あるいはチームを越えたバリューストリームを重視するかんばんチームに，このアプローチの適用が多く見られます。",
        "organization3": "自己設計型チームはメンバに対して，チームのデザイン，および／またはチームが運営される組織コンテキスト面での変更を行う権限が与えられます。ほとんどのマネージメントチームに加えて，特にリーン／アジャイルで高いレベルに達したスクラムチームの一部がこのポジションにあります。",
        "organization4": "自己統治型チームでは，企業の取締役会や労働組合，新興企業で見られるように，４つのコア職務すべてについて全メンバが責任を持ちます。",
        "7": "これらのチームの状態と、Squadでの開発を紐づけて考えてみると、Squad毎に責任が移譲されているということは、その中に属しているメンバーの1人1人が大きな責任をもつということです。例外もありますが、1Squadに属する同じChapterの人間は多くて3人、多くは1人か2人です。(1 Business Owner, 1 FrontEnd, 2 Backend, 1 Mobile, 1 Product Owner, 1 QAみたいな感じです。(本当はもう少し増やしたい))例えば、その1人1人が自分の進捗の管理に責任を持ちます。なので、あるSquadにおいて、あるChaper(FrontEnd, BackEnd)の責任はChapter Leadではなく、Chapterのメンバーにあります。(必要に応じてChapterLeadは支援を惜しみませんが)",
        "8": "その為、Squadは組織をSelf-managing teamの状態まで引きあげやすいという特徴があります。加えて、次の段階Self-designing teamまでの道も凄くオープンです。新規のプロジェクトの多くは、Squad毎にDesign Sprintを行うことで、縦軸のメンバーを早い段階からProjectに関与させることが可能です。",
        "9": "Squadを用いた自己組織の究極の目的、目標としては、1Squadがほぼ独立した会社の用に、プロダクトやビジネスのKPIの達成のために邁進できることではないでしょうか。",
        "10": "一方で、Squadで開発を進める上での難しさ、デメリットもあります。その点において、Chapter Leadの役割は非常に重要だと考えています。次のセクションでは、自分がエンジニアのChapter Leadに対して求めている期待値について紹介します。"
      }
    },
    "chapter-lead": {
      "1": "改めてですが、弊社の開発組織は、縦割りはSquad(Product, Project毎), 横割りはChapter(FrontEnd, Backend等)と定義してマトリックス型の組織体系で構成されています。",
      "2": "Chapter Leadは、横割りのChapterを支援するLeadポジションです。",
      "5-1": {
        "1": "Chapter LeadのMissionについては、WealthParkでは次のように定義しています。",
        "2": "“Maximize chapter productivity, output by using both leadership and hands-on”",
        "3": "“Chapterの生産性、成果をリーダーシップとハンズオン(自ら手を動かすことによって)最大化すること“",
        "4": "リーダーシップとハンズオンの両者が明確に記載されている点が特徴です。",
        "5": "まず、リーダーシップの点についてですが、",
        "6": "The chapter lead is line manager for his chapter members, with all the traditional responsibilities such as developing people, setting salaries, etc",
        "7": "Chapter leadはいわゆるEngineering Managerの側面を持ち合わせていて、Chapter間での技術スタック、知識、ツールの共有などをファシリテートします。また、メンバーの開発のサポートや、目標設定なども行います。",
        "8": "Wealth ParkではLeadershipについて、下記の期待値を定めています。",
        "9": "Expectation A : It’s the chapter lead's responsibility to help with chapter members' personal development, to work on their professional expertise and to offer guidance and advice for their challenges and development goals.",
        "10": "Expectation A : メンバーの開発、成長の支援。専門領域に対して、課題の提供、成長、目標設定の為の指導や助言をすること。"
      },
      "5-2": {
        "1": "Chapter Leadの特徴である、hands-onの部分です。",
        "2": "Spotifyの資料は次のように書かれています。",
        "3": "However, the chapter lead is also part of a squad and is involved in the day-to-day work, which helps him stay in touch with reality.",
        "4": "このTouch with realityの部分が非常に大切だと考えています。一見、このChapter Leadはいわゆるプレイングマネージャのように見えるのですが、必ずしもそうではないと考えています。",
        "5": "このrealityという言葉は、色々な読み取り方が出来ると思います。1エンジニアとしての技術力、エッジなTechnologyに対する理解、プロダクトに対する知識、プロダクトの課題など。",
        "6": "僕は、'プロダクトに対するリアルな課題感の把握' を 'Reality' として捉えています。",
        "7": "例えば、組織として、リファクタリング、リアーキテクトを進めたいが、思ったより進んでない。",
        "8": "というIssueがあったとき、どうやって課題を特定していくことになるのでしょうか。どの粒度で課題を見るのが良いでしょうか。それは、プロダクトがMonolithだからなのか、レガシーすぎるからなのか、コードが複雑(らしい)からなのか、コードのドメインが綺麗にわかれていないからなのか、ある複雑な関数のテストコードがなく、リファクタリング後のテストコードがかけないからなのか、メンテナンスタスクに追われて、リファクタリングに時間が避けないからなのか。どれもが正しくある可能性がある一方で、どこに一番課題感を現場の人が感じているのか、それが'実際どれくらい大変なのか'という肌感は、現場にいる人とそうでない人には違いがあることが多いと考えています。",
        "9": "かけられる時間は他のメンバーよりも少ないですが、それでも1Chapterのメンバーとして手を動かすことで、Realな課題感を持つことができると考えています。",
        "10": "とはいえ、Leadership, Management業をしつつ、頑張ることで、Chapterのメンバーと同等以上のアウトプットを出してほしいというわけではありません。LeadershipとHands-onにかける比重については、柔軟に考えています。パターンを考えると、",
        "patterns": {
          "1": "一定の割合を維持する",
          "2": "どちらかに多めの比重をかける(それはもしかしたら、EMっぽいChapter LeadとTechleadっぽいChapter Leadなのかもしれない)",
          "3": "状況に応じてMenagementに専念している時もあれば、開発に専念しているときもある"
        },
        "11": "などがあると思います。どれも一番良いアプローチになりうると考えています。大切なのは、",
        "12": "“Maximize chapter productivity, output by using both leadership and hands-on”",
        "13": "“Chapterの生産性、成果をリーダーシップとハンズオン(自ら手を動かすことによって)最大化すること“",
        "14": "に貢献できているかどうかです。但し、Chapter Leadが1 ChapterとしてSquadに属することを大切に考えているということは伝えています。",
        "15": "Wealth ParkにおけるChapter Leadに対する期待値の1つ(Hands-on)",
        "16": "Expectation B : A chapter lead is not only responsible for his or her chapter, but also works in a squad like everybody else.(the chapter lead is also part of a squad and is involved in the day-to-day work, which helps him stay in touch with reality.)",
        "17": "Expectation B : チャプターリードはチャプターに対する責任を負うだけでなく、他のメンバーと同様にSquadのメンバーの1人として、働くことを期待する。(それによって、現実的な課題や実情の理解を高いレベルで行う)"
      },
      "5-3": {
        "1": "これはChapter Leadにだけ、というメッセージではないのですが、上記を踏まえて、未来と今の両方を見て欲しい、ということを最後に伝えています。",
        "2": "Expectation C : By demonstrating professional expertise and touching with reality, Chapter lead SHOULD consider future architecture, vision and NEED TO understand current technical debts, complexity.",
        "3": "Expectation C : 専門知識を発揮すること、実情を正しく理解することで、チャプターリードは、将来のアーキテクチャとビジョンの検討、現在の技術的負債、複雑さを理解する必要がある。",
        "4": "どの位先の未来やビジョンを見通してほしいか、というのはこれから明文化していきます。先の章でも書いてありますが、比較的技術的負債は多く、現状をある程度理解した上で改善に取り組むことが必須だと今は考えています。という背景もあり、今は上記の期待値をChapter Lead全員に対して求めています。"
      },
      "5-4": {
        "1": "Chapter Leadという切り口で話すと新鮮な面である一方で、現状はいわゆるメンバー、チームリーダーとマネージャーの責任範囲、TechleadとEngineering Managerの責任範囲とそこまで大差ないといえば無いのかもしれません。コンセプト的には上じゃなくて横。Chapterの１員であるということが違いにはなりますが、大なり小なりそういった働き方をされているチームリーダーの方はいらっしゃると思うので。但し、Squadの縦割りが強力な分、EMとしての力が求められる、という側面はあります。それぞれが独立して動ける環境を維持しつつ、横串をまとめあげ、大局的な情報を理解しつづけられるか、というのは腕の見せ所です。",
        "2": "SquadやChapter Leadに関する資料は多くはありませんが(特に日本語)、Referenceをいくつか載せておきます。よかったら見てみてください。",
        "3": "How to Build Your Own Spotify Modelにも書かれているように、僕らがやりたいことはSpotifyのコピーではなく、考え方をベースにした自分達のやり方です。また、この考え方が発表されたのも2012年であり、現在の彼らの組織構造もまた、元々あったものとは変わってきているはずです。僕自身も、まだまだこのプロセスを理解しようとしている、見極めている最中です。"
      }
    },
    "technical-debt": {
      "1": "正直、結構負債は多いほうだな、と会社に入ってから実感しています。加えて、Squadでの開発は、Agilityがでる一方、個人や組織として未成熟な状態では、それなりに負債が出やすいという感覚があります。常に負債の返却と新規開発のバランスを適切に保つことは、自分の大切な責任です。",
      "2": "今は、Squadでの開発体制を維持しつつ、技術的負債を返却していこうと考えています。プロダクトの全体像と、今抱えているメジャーな負債については、VPoEになるあたりでまとめて共有しました。(Miroはとても図が描きやすくて好きです。)",
      "3": "技術的負債の返却に向けて、現在打っている手としては、",
      "approaches": {
        "1": "エンジニアそれぞれが今ある技術的な負債を大局的に理解すること",
        "2": "なぜ負債を返さないといけないのか、それぞれの負債が阻害していることを理解する",
        "3": "Core Squadを作り、プラットフォーム的なプロダクト、リファクタリングに専念できるSquadを作る",
        "4": "Chapter Leadを中心に、将来あるべきアーキテクチャと現状の課題の理解を深めalignしていく"
      },
      "4": "のようなことをしています。正直、まだまだ負債を返却するスピードは十分でなく、よりスピード感をもって技術的負債に取り組んでいく必要性を感じています。こちらに関しては、負債の返却のスピードをみながら、打つ手を変えたりしないといけない所も出てくると考えています。技術的負債に対するアプローチについては別途掘り下げた記事を書こうと思います。"
    },
    "responsibility": {
      "1": "責務は多くあるものの、シンプルにまとめるとするならば、'Execution'と'Roadmap'の2つだと捉えています。Executionとは実行責任で、やろうとしていること、やりたいことがきちんと実行され、デリバリーされることです。(加えて、エンジニアの人がやりたいと思っていることをExecuteできるも含めた伝え方をしています。ただ、これは本質的にはCareerや、モチベートする部分ではあります。)",
      "2": "VPoEに求められるExecutionの責務に関してはFincの清水さんがまとめられている下記のHandbookに非常に良くまとめられています。",
      "3": "ただ、1点弊社のポイントとしては、弊社はCTOがいる体制ではないので、戦略策定の部分にも責務を負っています。現在はややExecutionに自分の比重が向いていると捉えています。",
      "4": "一方で、",
      "5": "ベンチャーの規模が小さいうちはこの役割を一人で兼任することも多いのですが、数が増えるなどして忙しくなると、多くの場合CTOの役割を放棄してしまう後者の状況に陥るケースはよく見られます。上に引用したエントリーでは社員数が20人くらいになったら、両者を専任にすべきだろうといっています。これはケースバイケースですが、日々のオペレーションを離れて戦略的に考えることができる環境を得ることができなくなったら、対応策を早期に取るべきだと心得ておくとよいでしょう。",
      "6": "とある通り、今の組織体系において、常に自分がどれだけ先のことを考えることに時間を使うことができているか、意識しながら仕事する必要があります。このバランス感は自分がChapter Leadに求める部分とも凄く似ていますが、今の自分の立ち位置でも非常に大切です。"
    },
    "last": "実行と戦略と向きあっていたら、あっという間に2ヶ月が経ってしまいました。定期的に自分のアクションを振り返る / まとめる為にも、発信を続けていけたらなと思います。近々、会社のエンジニアブログも立ち上げようと考えているので、より実際の業務に踏み込んだ話は、今後はそちらを通じて発信できればと考えています。もしも質問などありましたら、気軽にTwitterでメンションやDMなどしていただければと思います！"
  }
}
